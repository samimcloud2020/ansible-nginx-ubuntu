- name: web for nginx deploy on ubuntu
  hosts: localhost
  become: yes
  vars:
    domain: letmovecloud.com
    ansible_user: root  
  tasks:
  - name: "apt-get update"
    apt:
      update_cache: yes
      cache_valid_time: 3600
      
  - name: Allow everything and enable UFW
    ufw:
      state: enabled
      policy: allow    
    
  - name: Allow all access to tcp port 80
    ufw:
      rule: allow
      port: '80'
      proto: tcp    
  - name: Install openssl
    package:
      name: “{{ item }}”
      state: latest
    with_items:
      - openssl
      - python-openssl
 
  - name: Generate an OpenSSL private key
    openssl_privatekey:
      path: /etc/ssl/private/ansible.com.pem
 
  - name: Create directory
    file:
      path: /etc/ssl/csr
      state: directory
      mode: 0755
 
  - name: Generate an OpenSSL Certificate Signing Request
    openssl_csr:
      path: /etc/ssl/csr/www.ansible.com.csr
      privatekey_path: /etc/ssl/private/ansible.com.pem
      country_name: IN
      organization_name: Ansible
      email_address: author@shakthimaan.com
      common_name: www.ansible.com
 
  - name: Generate a self signed certificate
    openssl_certificate:
      path: /etc/ssl/certs/nginx-selfsigned.crt
      privatekey_path: /etc/ssl/private/ansible.com.pem
      csr_path: /etc/ssl/csr/www.ansible.com.csr
      provider: selfsigned
      
  - name: "install nginx"
    apt:
      name: ['nginx']
      state: latest

  - name: "create www directory"
    file:
      path: /var/www/{{ domain }}
      state: directory
      mode: '0775'
      owner: "{{ ansible_user }}"
      group: "{{ ansible_user }}"

  - name: delete default nginx site
    file:
      path: /etc/nginx/sites-enabled/default
      state: absent
    notify: restart nginx

  - name: copy nginx site.conf
    template:
      src: site.conf.j2
      dest: /etc/nginx/sites-enabled/{{ domain }}
      owner: root
      group: root
      mode: '0644'
    notify: restart nginx

  - name: "sync website"
    synchronize:
      src: site/
      dest: /var/www/{{ domain }}
      archive: no
      checksum: yes
      recursive: yes
      delete: yes
    become: no    

  handlers:
    - name: restart nginx
      service:
        name: nginx
        state: restarted
