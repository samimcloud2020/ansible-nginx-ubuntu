
Removes all but config files.

sudo apt-get remove nginx nginx-common
Removes everything.

sudo apt-get purge nginx nginx-common
After using any of the above commands, use this in order to remove dependencies used by nginx which are no longer required.

sudo apt-get autoremove
----------------------------------------------------------------
Deploying certificate
Successfully deployed certificate for jenkins.trycloud.co.in to /etc/nginx/sites-enabled/jenkins.trycloud.co.in
Successfully deployed certificate for www.jenkins.trycloud.co.in to /etc/nginx/sites-enabled/jenkins.trycloud.co.in
Congratulations! You have successfully enabled HTTPS on https://jenkins.trycloud.co.in and https://www.jenkins.trycloud.co.in

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -


root@ip-172-31-94-216:/etc/nginx/sites-enabled# cat /etc/nginx/sites-enabled/jenkins.trycloud.co.in
server {
  server_name jenkins.trycloud.co.in www.jenkins.trycloud.co.in;
  root /var/www/jenkins.trycloud.co.in/html;
  location / {
                try_files $uri $uri/ =404;
        }
  
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/jenkins.trycloud.co.in/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/jenkins.trycloud.co.in/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot


}



server {
    if ($host = www.jenkins.trycloud.co.in) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    if ($host = jenkins.trycloud.co.in) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


  listen 80;
  server_name jenkins.trycloud.co.in www.jenkins.trycloud.co.in;
    return 404; # managed by Certbot



--------------------------------------------------------------------------------
